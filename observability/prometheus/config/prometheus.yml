# ============================================================================
# PROMETHEUS CONFIGURATION - Modern Alloy-based Setup
# ============================================================================
# All system and Docker metrics are collected by Alloy and sent via remote_write
# Prometheus scrapes only:
# 1. Services that expose Prometheus metrics directly (Traefik, MinIO, etc.)
# 2. Alloy's own internal metrics
# 3. Observability stack components (Grafana, Loki, Prometheus itself)
# ============================================================================

global:
  scrape_interval: 15s
  evaluation_interval: 15s
  scrape_timeout: 10s
  external_labels:
    cluster: 'homelab'
    environment: 'production'

# Alertmanager configuration (optional - add later)
# alerting:
#   alertmanagers:
#     - static_configs:
#         - targets:
#           - alertmanager:9093

# Load alerting rules
rule_files:
  - '/etc/prometheus/rules/*.yml'

# ============================================================================
# SCRAPE CONFIGURATIONS
# ============================================================================

scrape_configs:
  # --------------------------------------------------------------------------
  # Observability Stack (local services)
  # --------------------------------------------------------------------------

  # Prometheus itself
  - job_name: 'prometheus'
    static_configs:
      - targets: ['localhost:9090']
        labels:
          instance: 'prometheus'
          vm: 'observability'
          service: 'observability'

  # Grafana
  - job_name: 'grafana'
    static_configs:
      - targets: ['grafana:3000']
        labels:
          instance: 'grafana'
          vm: 'observability'
          service: 'observability'

  # Loki
  - job_name: 'loki'
    static_configs:
      - targets: ['loki:3100']
        labels:
          instance: 'loki'
          vm: 'observability'
          service: 'observability'

  # Alloy - internal metrics only (system/Docker metrics come via remote_write)
  - job_name: 'alloy'
    static_configs:
      - targets: ['alloy:12345']
        labels:
          instance: 'alloy'
          vm: 'observability'
          service: 'observability'

  # --------------------------------------------------------------------------
  # Edge Services (VM: 10.10.10.110)
  # --------------------------------------------------------------------------

  # Traefik - exposes metrics directly
  - job_name: 'traefik'
    static_configs:
      - targets: ['10.10.10.110:8080']
        labels:
          instance: 'traefik'
          vm: 'edge'
          service: 'proxy'

  # --------------------------------------------------------------------------
  # Database Services (VM: 10.10.10.111)
  # --------------------------------------------------------------------------

  # MinIO - exposes metrics directly
  - job_name: 'minio'
    metrics_path: /minio/v2/metrics/cluster
    scheme: http
    static_configs:
      - targets: ['10.10.10.111:9000']
        labels:
          instance: 'minio'
          vm: 'db'
          service: 'storage'

  # Note: PostgreSQL, MongoDB, Redis metrics would need separate exporters
  # For now, rely on Alloy to collect Docker container metrics
  # Can add dedicated exporters later if needed

  # --------------------------------------------------------------------------
  # Media Services (VM: 10.10.10.113) - Once deployed
  # --------------------------------------------------------------------------

  # Sonarr
  - job_name: 'sonarr'
    static_configs:
      - targets: ['10.10.10.113:8989']
        labels:
          instance: 'sonarr'
          vm: 'media'
          service: 'media'

  # Radarr
  - job_name: 'radarr'
    static_configs:
      - targets: ['10.10.10.113:7878']
        labels:
          instance: 'radarr'
          vm: 'media'
          service: 'media'

  # Prowlarr
  - job_name: 'prowlarr'
    static_configs:
      - targets: ['10.10.10.113:9696']
        labels:
          instance: 'prowlarr'
          vm: 'media'
          service: 'media'

  # --------------------------------------------------------------------------
  # Coolify (VM: 10.10.10.114) - Once deployed
  # --------------------------------------------------------------------------

  # Coolify
  - job_name: 'coolify'
    static_configs:
      - targets: ['10.10.10.114:8000']
        labels:
          instance: 'coolify'
          vm: 'coolify'
          service: 'paas'

# ============================================================================
# NOTES FOR FUTURE EXPANSION
# ============================================================================
#
# To monitor additional VMs:
# 1. Deploy Alloy on each VM (same config, update hostname)
# 2. Alloy automatically sends metrics via remote_write to this Prometheus
# 3. Add Alloy scrape target here (optional, for Alloy's own metrics)
#
# Example for edge VM:
#   - job_name: 'alloy-edge'
#     static_configs:
#       - targets: ['10.10.10.110:12345']
#         labels:
#           instance: 'alloy'
#           vm: 'edge'
#
# For database-specific metrics, add exporters:
# - PostgreSQL Exporter: postgres_exporter
# - MongoDB Exporter: mongodb_exporter
# - Redis Exporter: redis_exporter
# ============================================================================
